; go test -v -run CleanSourceExpr$ ./ompp/db
; go test -v -run TestCleanSourceExpr ./ompp/db
; go test -v -run ^TestCleanSourceExpr$ ./ompp/db
;
[CleanSource]
Src = Expr0[variant]  -  Expr0[base]  /  Expr2[base]  +  10

; go test -v -run UnsafeSqlOrComment$ ./ompp/db
; go test -v -run TestErrorIfUnsafeSqlOrComment ./ompp/db
;
[UnsafeSql]
Src_2  = Expr0[variant] -- Expr0[base]
Src_3  = "Expr0[variant] -; Expr0[base]"
Src_4  = Expr0[variant] \ Expr0[base]
Src_5  = Expr0[variant]--Expr0[base]
Src_6  = "Expr0[variant]-;Expr0[base]"
Src_7  = Expr0[variant]\Expr0[base]

Src_20  = Expr0[variant] -DELETE Expr0[base]
Src_21  = Expr0[variant] - Expr0[base]INSERT
Src_22  = UPDATE Expr0[variant] - Expr0[base]
Src_23  = EXEC[variant] - Expr0[base]
Src_24  = Expr0[variant] -GO[base]
Src_25  = Expr0[variant] '-'MERGE'[base]'
Src_26  = Expr0[variant] '-'''CREATE'[base]'
Src_27 = Expr0[variant] - Expr0[base]''GRANT
Src_28 = REVOKE'Expr0'[variant] - Expr0[base]

Src_30 = Expr0[variant] DELETE2-DELETE Expr0[base]
Src_31 = Expr0[variant] -INSERT2 Expr0[base]INSERT
Src_32 = UPDATE2 UPDATE Expr0[variant] - Expr0[base]
Src_33 = EXEC2 EXEC[variant] - Expr0[base]
Src_34 = Expr0[variant] GO2-GO[base]
Src_35 = Expr0[variant] ''MERGE2'-'MERGE'[base]'
Src_36 = Expr0[variant] ''''CREATE''-''CREATE'[base]'
Src_37 = Expr0[variant] - Expr0[base]''GRANT2''GRANT
Src_38 = REVOKE2''REVOKE'Expr0'[variant] - Expr0[base]


; go test -v -run TranslateAllSimpleFnc ./ompp/db
;
[TranslateSimpleFnc]
Src_2    = Expr0[variant] - Expr0[base]
Valid_2  = Expr0[variant] - Expr0[base]

Src_3    = OM_IF(Expr0[variant] - Expr0[base] > 1.5 THEN Expr0[variant] - Expr0[base] ELSE 1.5)
Valid_3  = CASE WHEN Expr0[variant] - Expr0[base] > 1.5 THEN Expr0[variant] - Expr0[base] ELSE 1.5 END

Src_4    = OM_DIV_BY(Expr0[variant] - Expr0[base])
Valid_4  = CASE WHEN ABS(Expr0[variant] - Expr0[base]) > 1.0e-37 THEN Expr0[variant] - Expr0[base] ELSE NULL END

Src_5    = OM_IF( Expr0[variant] - Expr0[base] > 1.5 THEN Expr0[variant] - Expr0[base] ELSE 1.5 )
Valid_5  = CASE WHEN  Expr0[variant] - Expr0[base] > 1.5 THEN Expr0[variant] - Expr0[base] ELSE 1.5  END

Src_6    = OM_DIV_BY     (( SQRT(ABS(Expr0[variant] - Expr0[base])) ))
Valid_6  = CASE WHEN ABS(( SQRT(ABS(Expr0[variant] - Expr0[base])) )) > 1.0e-37 THEN ( SQRT(ABS(Expr0[variant] - Expr0[base])) ) ELSE NULL END

Src_7    = OM_IF( OM_IF(Expr0 > 1.5 THEN Expr0 ELSE 1.5) < 2 THEN 2 ELSE OM_IF(Expr0 > 1.5 THEN Expr0 ELSE 1.5) )
Valid_7  = CASE WHEN  CASE WHEN Expr0 > 1.5 THEN Expr0 ELSE 1.5 END < 2 THEN 2 ELSE CASE WHEN Expr0 > 1.5 THEN Expr0 ELSE 1.5 END  END

Src_8    = "  OM_IF( OM_IF(Expr0 > 1.5 THEN Expr0 ELSE 1.5) < 2 THEN 2 ELSE OM_IF(Expr0 > 1.5 THEN Expr0 ELSE 1.5) )  "
Valid_8  = "  CASE WHEN  CASE WHEN Expr0 > 1.5 THEN Expr0 ELSE 1.5 END < 2 THEN 2 ELSE CASE WHEN Expr0 > 1.5 THEN Expr0 ELSE 1.5 END  END  "

Src_9    = '' + Expr0[variant] - Expr0[base]
Valid_9  = '' + Expr0[variant] - Expr0[base]

Src_10    = "'ab' + 'cd'Expr0[variant]'e''f'- Expr0[base] + 'gh'"
Valid_10  = "'ab' + 'cd'Expr0[variant]'e''f'- Expr0[base] + 'gh'"

Src_11    = OM_DIV_BY     ( SQRT(ABS(v)) / OM_DIV_BY(w)/OM_DIV_BY(x/OM_DIV_BY(y)) )
Valid_11  = CASE WHEN ABS( SQRT(ABS(v)) / CASE WHEN ABS(w) > 1.0e-37 THEN w ELSE NULL END/CASE WHEN ABS(x/CASE WHEN ABS(y) > 1.0e-37 THEN y ELSE NULL END) > 1.0e-37 THEN x/CASE WHEN ABS(y) > 1.0e-37 THEN y ELSE NULL END ELSE NULL END ) > 1.0e-37 THEN  SQRT(ABS(v)) / CASE WHEN ABS(w) > 1.0e-37 THEN w ELSE NULL END/CASE WHEN ABS(x/CASE WHEN ABS(y) > 1.0e-37 THEN y ELSE NULL END) > 1.0e-37 THEN x/CASE WHEN ABS(y) > 1.0e-37 THEN y ELSE NULL END ELSE NULL END  ELSE NULL END

Src_21    = OM_IF(Expr0 > 2 + 'ab' THEN Expr0 ELSE 2)
Valid_21  = CASE WHEN Expr0 > 2 + 'ab' THEN Expr0 ELSE 2 END

Src_22    = OM_IF(Expr0 > 2 + 'ef' THEN Expr0 ELSE 2 + 'km')
Valid_22  = CASE WHEN Expr0 > 2 + 'ef' THEN Expr0 ELSE 2 + 'km' END

Src_23    = 'ab'+OM_IF(Expr0 > 2 THEN Expr0 ELSE 2)
Valid_23  = 'ab'+CASE WHEN Expr0 > 2 THEN Expr0 ELSE 2 END

Src_24    = 'ab' + OM_IF(Expr0 > 2 THEN Expr0 ELSE 2)
Valid_24  = 'ab' + CASE WHEN Expr0 > 2 THEN Expr0 ELSE 2 END

Src_25    = OM_IF('cd' + Expr0 > 2 THEN Expr0 ELSE 2 + 'km')
Valid_25  = CASE WHEN 'cd' + Expr0 > 2 THEN Expr0 ELSE 2 + 'km' END

Src_26    = "'ab'+OM_IF('cd' + Expr0 > 2''THEN'ef'Expr0 ELSE 2 + 'km') 'rs'"
Valid_26  = "'ab'+CASE WHEN 'cd' + Expr0 > 2''THEN'ef'Expr0 ELSE 2 + 'km' END 'rs'"

Src_27    = "'ab'+OM_IF('cd' + Expr0 > 2''THEN'ef'Expr0 ELSE 2 + 'km')'rs'"
Valid_27  = "'ab'+CASE WHEN 'cd' + Expr0 > 2''THEN'ef'Expr0 ELSE 2 + 'km' END'rs'"

Src_28    = "'ab'+OM_IF('cd'-OM_IF(Expr0'ef'> 1 THEN Expr0 ELSE 1'gh')'ij'< 2 THEN 2 ELSE 'km'-OM_IF(Expr0 > 3 THEN Expr0 ELSE 4)'np')'rs'"
Valid_28  = "'ab'+CASE WHEN 'cd'-CASE WHEN Expr0'ef'> 1 THEN Expr0 ELSE 1'gh' END'ij'< 2 THEN 2 ELSE 'km'-CASE WHEN Expr0 > 3 THEN Expr0 ELSE 4 END'np' END'rs'"


; go test -v -run TranslateToExprSql$ ./ompp/db
;
[TranslateToExprSql]
ModelName      = modelOne
ModelDigest    = 
DbPath         = ../../../test/modelOne.sqlite
TableName      = salarySex

Calculate_1    = expr0 - expr1
BaseRunId_1    = 201
RunIds_1       = 202,205
Valid_1        = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT B.run_id, 0 AS calc_id, B.dim0, B.dim1, B.src0 - B1.src1 AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) WHERE B.run_id IN (201, 202, 205) ORDER BY 1, 2, 3, 4

Calculate_2    = expr1[variant] + expr0[base]
BaseRunId_2    = 201
RunIds_2       = 202,205
Valid_2        = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT V.run_id, 0 AS calc_id, B.dim0, B.dim1, V.src1 + B.src0 AS calc_value FROM cs0 B INNER JOIN cs1 V ON (V.dim0 = B.dim0 AND V.dim1 = B.dim1) WHERE B.run_id = 201 AND V.run_id IN (202, 205) ORDER BY 1, 2, 3, 4

Calculate_3   = (expr1 + expr2) / OM_DIV_BY(expr0)
BaseRunId_3    = 201
RunIds_3       = 202,205
Valid_3        = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), cs2 (run_id, dim0, dim1, src2) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 2) SELECT B.run_id, 0 AS calc_id, B.dim0, B.dim1, (B1.src1 + B2.src2) / CASE WHEN ABS(B.src0) > 1.0e-37 THEN B.src0 ELSE NULL END AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) INNER JOIN cs2 B2 ON (B2.run_id = B.run_id AND B2.dim0 = B.dim0 AND B2.dim1 = B.dim1) WHERE B.run_id IN (201, 202, 205) ORDER BY 1, 2, 3, 4

Calculate_4    = (expr1[base] + expr1[variant] + expr0[variant]) / OM_DIV_BY(expr0[base])
BaseRunId_4    = 201
RunIds_4       = 202,205
Valid_4        = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT V.run_id, 0 AS calc_id, B.dim0, B.dim1, (B1.src1 + V1.src1 + V.src0) / CASE WHEN ABS(B.src0) > 1.0e-37 THEN B.src0 ELSE NULL END AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) INNER JOIN cs0 V ON (V.dim0 = B.dim0 AND V.dim1 = B.dim1) INNER JOIN cs1 V1 ON (V1.run_id = B.run_id AND V1.dim0 = B.dim0 AND V1.dim1 = B.dim1) WHERE B.run_id = 201 AND V.run_id IN (202, 205) ORDER BY 1, 2, 3, 4


; go test -v -run ParseAggrCalculation$ ./ompp/db
;
[ParseAggrCalculation]
ModelName      = modelOne
ModelDigest    = 
DbPath         = ../../../test/modelOne.sqlite
TableName      = salarySex

Src_1    = OM_SUM(acc1)
Valid_1  = SUM(M1.acc_value)

Src_2    = OM_SUM(acc0 + acc1)
Valid_2  = SUM(M1.acc_value + L1A1.acc1)

Src_3    = OM_SUM(acc0 - 0.5 * OM_AVG(acc0))
Valid_3  = SUM(M1.acc_value - 0.5 * T2.ex1)--1_0--AVG(M2.acc_value)

Src_3    = OM_VAR(acc1)
Valid_3  = SUM(((M1.acc_value) - T2.ex1) * ((M1.acc_value) - T2.ex1)) / CASE WHEN ABS( COUNT(M1.acc_value) - 1 ) > 1.0e-37 THEN COUNT(M1.acc_value) - 1 ELSE NULL END--1_0--AVG(M2.acc_value)

Src_4    = OM_AVG(acc0) + OM_SUM(acc0 + 3 * OM_MAX(acc1))
Valid_4  = AVG(M1.acc_value) + SUM(M1.acc_value + 3 * T2.ex1)--1_0--MAX(M2.acc_value)

Src_5    = OM_AVG(acc0) + OM_COUNT(acc1) + OM_SUM(acc0 + 3 * OM_MAX(acc1 - 7 * OM_MIN(acc0 + 9) + 5))
Valid_5  = AVG(M1.acc_value) + COUNT(L1A1.acc1) + SUM(M1.acc_value + 3 * T2.ex1)--1_0--MAX(M2.acc_value - 7 * T3.ex2 + 5)--2_0--MIN(M3.acc_value + 9)

Src_6    = OM_AVG(acc0) + OM_MAX(acc0) - OM_MIN(acc1) + OM_SUM(acc0 + 3 * OM_MAX(acc1 - 7 * OM_MIN(acc0 + 9) + 5))
Valid_6  = AVG(M1.acc_value) + MAX(M1.acc_value) - MIN(L1A1.acc1) + SUM(M1.acc_value + 3 * T2.ex1)--1_0--MAX(M2.acc_value - 7 * T3.ex2 + 5)--2_0--MIN(M3.acc_value + 9)

Src_7    = OM_AVG(acc0) + OM_SUM(acc0 + 3 * OM_MAX(acc1 - 7 * OM_MIN(acc0 + 9) + 5) - 4 * OM_SUM(acc1) + 3 * OM_SUM(acc0 - acc1 + OM_MAX(acc1)) )
Valid_7  = AVG(M1.acc_value) + SUM(M1.acc_value + 3 * T2.ex1 - 4 * T2.ex2 + 3 * T2.ex3 )--1_0--MAX(L2A1.acc1 - 7 * T3.ex4 + 5)--1_1--SUM(L2A1.acc1)--1_2--SUM(M2.acc_value - L2A1.acc1 + T3.ex5)--2_0--MIN(M3.acc_value + 9)--2_1--MAX(L3A1.acc1)

; go test -v -run TransalteAccAggrToSql$ ./ompp/db
;
[TransalteAccAggrToSql]
ModelName      = modelOne
ModelDigest    = 
DbPath         = ../../../test/modelOne.sqlite
TableName      = salarySex

Src_1    = OM_SUM(acc1)
Valid_1  = WITH asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT A.run_id, 0 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SUM(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A

Src_3    = OM_SUM(acc0 - 0.5 * OM_AVG(acc0))
Valid_3  = WITH asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT A.run_id, 0 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SUM(M1.acc_value - 0.5 * T2.ex1) AS calc_value FROM asrc M1 INNER JOIN (SELECT M2.run_id, M2.dim0, M2.dim1, AVG(M2.acc_value) AS ex1 FROM asrc M2 WHERE M2.acc_id = 0 GROUP BY M2.run_id, M2.dim0, M2.dim1) T2 ON (T2.run_id = M1.run_id AND T2.dim0 = M1.dim0 AND T2.dim1 = M1.dim1) WHERE M1.acc_id = 0 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A


; go test -v -run TranslateTableCalcToSql$ ./ompp/db
;
[TranslateTableCalcToSql]
ModelName      = modelOne
ModelDigest    = 
DbPath         = ../../../test/modelOne.sqlite
TableName      = salarySex

Calculate_1     = expr0 , expr1
CalculateAggr_1 = OM_AVG(acc0) , OM_SUM(acc1)
RunIds_1        = 201,202
Valid_1 = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src0 AS calc_value FROM cs0 B WHERE B.run_id IN (201, 202) UNION ALL SELECT B.run_id, 1201 AS calc_id, B.dim0, B.dim1, B.src1 AS calc_value FROM cs1 B WHERE B.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2400 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, AVG(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 0 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2401 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SUM(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) ORDER BY 1, 2, 3, 4

Calculate_2     = expr0 , expr1
CalculateAggr_2 = OM_COUNT(acc0) , OM_MIN(acc1) , OM_MAX(acc1)
RunIds_2        = 201,202
Valid_2 = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src0 AS calc_value FROM cs0 B WHERE B.run_id IN (201, 202) UNION ALL SELECT B.run_id, 1201 AS calc_id, B.dim0, B.dim1, B.src1 AS calc_value FROM cs1 B WHERE B.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2400 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, COUNT(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 0 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2401 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, MIN(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2402 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, MAX(M1.acc_value) AS calc_value FROM asrc M1 WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) ORDER BY 1, 2, 3, 4

Calculate_3     = expr0 , expr1
CalculateAggr_3 = OM_VAR(acc0) , OM_SD(acc1)
RunIds_3        = 201,202
Valid_3  = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src0 AS calc_value FROM cs0 B WHERE B.run_id IN (201, 202) UNION ALL SELECT B.run_id, 1201 AS calc_id, B.dim0, B.dim1, B.src1 AS calc_value FROM cs1 B WHERE B.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2400 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SUM(((M1.acc_value) - T2.ex1) * ((M1.acc_value) - T2.ex1)) / CASE WHEN ABS( COUNT(M1.acc_value) - 1 ) > 1.0e-37 THEN COUNT(M1.acc_value) - 1 ELSE NULL END AS calc_value FROM asrc M1 INNER JOIN (SELECT M2.run_id, M2.dim0, M2.dim1, AVG(M2.acc_value) AS ex1 FROM asrc M2 WHERE M2.acc_id = 0 GROUP BY M2.run_id, M2.dim0, M2.dim1) T2 ON (T2.run_id = M1.run_id AND T2.dim0 = M1.dim0 AND T2.dim1 = M1.dim1) WHERE M1.acc_id = 0 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2401 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SQRT(SUM(((M1.acc_value) - T2.ex1) * ((M1.acc_value) - T2.ex1)) / CASE WHEN ABS( COUNT(M1.acc_value) - 1 ) > 1.0e-37 THEN COUNT(M1.acc_value) - 1 ELSE NULL END ) AS calc_value FROM asrc M1 INNER JOIN (SELECT M2.run_id, M2.dim0, M2.dim1, AVG(M2.acc_value) AS ex1 FROM asrc M2 WHERE M2.acc_id = 1 GROUP BY M2.run_id, M2.dim0, M2.dim1) T2 ON (T2.run_id = M1.run_id AND T2.dim0 = M1.dim0 AND T2.dim1 = M1.dim1) WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) ORDER BY 1, 2, 3, 4

Calculate_4     = expr0 , expr1
CalculateAggr_4 = OM_SE(acc0) , OM_CV(acc1)
RunIds_4        = 201,202
Valid_4 = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), asrc (run_id, acc_id, sub_id, dim0, dim1, acc_value) AS (SELECT BR.run_id, C.acc_id, C.sub_id, C.dim0, C.dim1, C.acc_value FROM salarySex_a_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101)) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src0 AS calc_value FROM cs0 B WHERE B.run_id IN (201, 202) UNION ALL SELECT B.run_id, 1201 AS calc_id, B.dim0, B.dim1, B.src1 AS calc_value FROM cs1 B WHERE B.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2400 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, SQRT(SUM(((M1.acc_value) - T2.ex1) * ((M1.acc_value) - T2.ex1)) / CASE WHEN ABS( COUNT(M1.acc_value) - 1 ) > 1.0e-37 THEN COUNT(M1.acc_value) - 1 ELSE NULL END / CASE WHEN ABS( COUNT(M1.acc_value) ) > 1.0e-37 THEN COUNT(M1.acc_value) ELSE NULL END ) AS calc_value FROM asrc M1 INNER JOIN (SELECT M2.run_id, M2.dim0, M2.dim1, AVG(M2.acc_value) AS ex1 FROM asrc M2 WHERE M2.acc_id = 0 GROUP BY M2.run_id, M2.dim0, M2.dim1) T2 ON (T2.run_id = M1.run_id AND T2.dim0 = M1.dim0 AND T2.dim1 = M1.dim1) WHERE M1.acc_id = 0 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) UNION ALL SELECT A.run_id, 2401 AS calc_id, A.dim0, A.dim1, A.calc_value FROM ( SELECT M1.run_id, M1.dim0, M1.dim1, 100 * ( SQRT(SUM(((M1.acc_value) - T2.ex1) * ((M1.acc_value) - T2.ex1)) / CASE WHEN ABS( COUNT(M1.acc_value) - 1 ) > 1.0e-37 THEN COUNT(M1.acc_value) - 1 ELSE NULL END ) / CASE WHEN ABS( AVG(M1.acc_value) ) > 1.0e-37 THEN AVG(M1.acc_value) ELSE NULL END ) AS calc_value FROM asrc M1 INNER JOIN (SELECT M2.run_id, M2.dim0, M2.dim1, AVG(M2.acc_value) AS ex1 FROM asrc M2 WHERE M2.acc_id = 1 GROUP BY M2.run_id, M2.dim0, M2.dim1) T2 ON (T2.run_id = M1.run_id AND T2.dim0 = M1.dim0 AND T2.dim1 = M1.dim1) WHERE M1.acc_id = 1 GROUP BY M1.run_id, M1.dim0, M1.dim1 ) A WHERE A.run_id IN (201, 202) ORDER BY 1, 2, 3, 4

; no aggreagtion, no comparison, simple experssion
;
Calculate_11 = expr0 - expr1
RunIds_11    = 201,202,205
Valid_11     = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src0 - B1.src1 AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) WHERE B.run_id IN (201, 202, 205) ORDER BY 1, 2, 3, 4

Calculate_13 = (expr1 + expr2) / OM_DIV_BY(expr0)
RunIds_13    = 201,202,205
Valid_13     = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1), cs2 (run_id, dim0, dim1, src2) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 2) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, (B1.src1 + B2.src2) / CASE WHEN ABS(B.src0) > 1.0e-37 THEN B.src0 ELSE NULL END AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) INNER JOIN cs2 B2 ON (B2.run_id = B.run_id AND B2.dim0 = B.dim0 AND B2.dim1 = B.dim1) WHERE B.run_id IN (201, 202, 205) ORDER BY 1, 2, 3, 4

; no aggreagtion, comparison
;
Calculate_12 = expr1[variant] + expr0[base]
BaseRunId_12 = 201
RunIds_12    = 202,205
Valid_12     = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT V.run_id, 1200 AS calc_id, B.dim0, B.dim1, V.src1 + B.src0 AS calc_value FROM cs0 B INNER JOIN cs1 V ON (V.dim0 = B.dim0 AND V.dim1 = B.dim1) WHERE B.run_id = 201 AND V.run_id IN (202, 205) ORDER BY 1, 2, 3, 4

Calculate_14 = (expr1[base] + expr1[variant] + expr0[variant]) / OM_DIV_BY(expr0[base])
BaseRunId_14 = 201
RunIds_14    = 202,205
Valid_14     = WITH cs0 (run_id, dim0, dim1, src0) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 0), cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT V.run_id, 1200 AS calc_id, B.dim0, B.dim1, (B1.src1 + V1.src1 + V.src0) / CASE WHEN ABS(B.src0) > 1.0e-37 THEN B.src0 ELSE NULL END AS calc_value FROM cs0 B INNER JOIN cs1 B1 ON (B1.run_id = B.run_id AND B1.dim0 = B.dim0 AND B1.dim1 = B.dim1) INNER JOIN cs0 V ON (V.dim0 = B.dim0 AND V.dim1 = B.dim1) INNER JOIN cs1 V1 ON (V1.run_id = B.run_id AND V1.dim0 = B.dim0 AND V1.dim1 = B.dim1) WHERE B.run_id = 201 AND V.run_id IN (202, 205) ORDER BY 1, 2, 3, 4

Calculate_20 = expr1 , expr1[variant] - expr1[base]
BaseRunId_20 = 201
RunIds_20    = 202,205
Valid_20     = WITH cs1 (run_id, dim0, dim1, src1) AS (SELECT BR.run_id, C.dim0, C.dim1, C.expr_value FROM salarySex_v_2012882 C INNER JOIN run_table BR ON (BR.base_run_id = C.run_id AND BR.table_hid = 101) WHERE C.expr_id = 1) SELECT B.run_id, 1200 AS calc_id, B.dim0, B.dim1, B.src1 AS calc_value FROM cs1 B WHERE B.run_id IN (201, 202, 205) UNION ALL SELECT V.run_id, 1201 AS calc_id, B.dim0, B.dim1, V.src1 - B.src1 AS calc_value FROM cs1 B INNER JOIN cs1 V ON (V.dim0 = B.dim0 AND V.dim1 = B.dim1) WHERE B.run_id = 201 AND V.run_id IN (202, 205) ORDER BY 1, 2, 3, 4


; go test -v -run CalculateOutputTable$ ./ompp/db
;
[CalculateOutputTable]
ModelName      = modelOne
ModelDigest    = 
DbPath         = ../../../test/modelOne.sqlite
TableName      = salarySex

Calculate_1     = expr0 , expr1
CalculateAggr_1 = OM_AVG(acc0) , OM_SUM(acc1)
RunIds_1        = 201,202,205
